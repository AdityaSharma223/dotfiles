
" change leader to ,
let mapleader=","

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => General
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Use vim settings, rather then vi settings 
set nocompatible

" Change shell
set shell=zsh

" Enable filetype plugins
filetype on                 
filetype plugin on
filetype indent on

" AUTOMATICALLY UPDATE WHEN A FILE IS CHANGED OUTSIDE
set autoread

" vimdiff option to ignore whitespace comparison
set diffopt+=iwhite
set diffexpr=""

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => VIM user interface
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" keep the cursor away from top/bottom
set scrolloff=4

" tab completion such as bash
set wildmenu
set wildmode=longest:full
" ignore files and directories
set wildignore+=*/tmp/*,*/.cache/*,*/.git/*,*.so,*~,*.pyc,*.bak,*.class,*.swp,*.zip,*.pdf 
set wildignore+=*\\tmp\\*,*.exe  " Windows

" Always show a status bar
set laststatus=2
" display line numbers
set number
set relativenumber
" display incomplete commands
set showcmd
" Set 7 lines to the cursor - when moving vertically using j/k
set so=7
"Always show current position
set ruler
" Height of the command bar
set cmdheight=1
" A buffer becomes hidden when it is abandoned
set hid

" Configure backspace so it acts as it should act
set backspace=eol,start,indent
set whichwrap+=<,>,h,l

" Ignore case when searching
set ignorecase
" When searching try to be smart about cases
set smartcase
" Highlight search results
set hlsearch

" Makes search act like search in modern browsers
set incsearch
" Don't redraw while executing macros (good performance config)
set lazyredraw
" For regular expressions turn magic on
set magic
" Show matching brackets when text indicator is over them
set showmatch
" How many tenths of a second to blink when matching brackets
set mat=2

" No annoying sound on errors
set noerrorbells
set novisualbell
set t_vb=
set tm=500

" No spaces between rows
set linespace=0

" Make the copied text through yank command available in the system clipboard
set clipboard=unnamedplus

" Since Vim will source .vimrc from any directory you run Vim from, this is
" a potential security hole; so, you should consider setting secure option.
" This option will restrict usage of some commands in non-default .vimrc files;
" commands that write to file or execute shell commands are not allowed and map 
" commands are displayed.
set secure


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Colors and Fonts
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" enable syntax highlighting
syntax enable

" enable 256 color pallete for the terminal
set t_Co=256

" dark color scheme
colorscheme gruv


" set UTF-8 encoding
set enc=utf-8
set fenc=utf-8
set termencoding=utf-8

" Use Unix as the standard file type
set ffs=unix,mac,dos

""""""""""""""""""""""""""""""""""""""""""
" => Files, backups and undo
""""""""""""""""""""""""""""""""""""""""""

" Turn backup off
set nobackup
set nowb
set noswapfile
set nowritebackup

" Sets how many lines of history VIM has to remember
set history=1000
" persistent undo
set undofile   
" maximum number of changes that can be undone
set undolevels=1000
 "maximum number lines to save for undo on a buffer reload
set undoreload=10000
" undo directory
set undodir=~/.vim/.undo,~tmp,/tmp
" backup directory
set backupdir=~/.vim/.backup//
" swap directory
set directory=~/.vim/.swp//

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Text, tab and indent related
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Use spaces instead of tabs
set expandtab
" Be smart when using tabs
set smarttab

" 1 tab == 2 spaces
set shiftwidth=2
set tabstop=2
set softtabstop=2

" Linebreak on 500 characters
set lbr
set textwidth=500

"Auto indent enables the use of indentention of previous line
set autoindent
"Smart indent allows the use of c indentation
set smartindent

"Wrap lines
set wrap
"disable preview scratch window
set completeopt=longest,menuone

" intelligent comments
set comments=sl:/*,mb:\ *,elx:\ */


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Syntatic and spell check
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Spell checking
set spelllang=en_us             " English as default language
set complete+=kspell            " Word completion
set nospell                     " Disable by default but ive enabled it

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => General Key mappings
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" personal keybindings 
map <leader>w :w<cr> 
map <leader>r :!python3 a.py
map <leader>n :new<cr> 
map <leader>nv :vnew<cr>
map <leader>rc :!g++ a.cpp && ./a.out
map <leader>c :!xclip -sel c 

" Disable arrows
noremap <Up> <Nop>
noremap <Down> <Nop>
noremap <Left> <Nop>
noremap <Right> <Nop>

" Disable PageUp/PageDown
noremap <PageUp> <Nop>
noremap <PageDown> <Nop>

" disable entering in replace mode when pressing insert twice. You can still enter in replace mode using R
imap <Insert> <Nop>
inoremap <S-Insert> <Insert>

" maps from: pazams/d-is-for-delete
" The idea is to remap the delete commands to put them in the black hole register
" This avoids that delete copies the deleted line/block to the buffer
nnoremap x "_x
nnoremap X "_X
nnoremap d "_d
nnoremap D "_D
vnoremap d "_d
nnoremap <leader>d ""d
nnoremap <leader>D ""D
vnoremap <leader>d ""d

" faster moving
nnoremap <C-j> jjjj
nnoremap <C-k> kkkk 
nnoremap <C-h> hhhh 
nnoremap <C-l> llll 

" Hard mapping of upper case letters in normal mode
" to avoid problems when capslock is enable
nnoremap H h
nnoremap J j
nnoremap K k
nnoremap L l

" yank from cursor to the end of the line
nnoremap Y y$
" yank always yanks the whole word
nnoremap yw yiw

" Useful mappings for managing buffers 
nnoremap <silent><Tab>       :bn<CR> 
nnoremap <silent><S-Tab>     :bp<CR> 
nnoremap <silent><Leader>q   :bd<CR> 

" Quickly edit/reload the vimrc file
nnoremap <silent> <leader>ev :e $MYVIMRC<CR>
nnoremap <silent> <leader>sv :so $MYVIMRC<CR>

" Mappings for opening terminal
nnoremap <leader><leader>v :vertical terminal<CR>
nnoremap <leader><leader>s :terminal<CR>

" Open most-recently used files plugin
nnoremap <Leader>m :MRU<CR> 

" Fuzzy file search
nnoremap <silent> <C-p> :Files<Cr>

" Fuzzy search of buffers 
nnoremap <silent> <F1> :Buffers <CR> 
" RegEx search for the word under cursor
nnoremap <silent> <F3> :Rg <C-R><C-W><CR> 
" Open source/header switch in a vertical tab 
nnoremap <silent> <F4> :AV<CR>
" open the file under the cursor in a vertical tab 
nnoremap <silent> <F5> :IHV<CR>
" Set local spell on/off
nnoremap <silent> <F7> :setlocal spell!<CR>
" Open nerdtree
nnoremap <silent> <F8> :NERDTreeToggle<CR>
" Open Tagbar
nnoremap <silent> <F9> :TagbarToggle<CR>
" Async quickfix window
nnoremap <silent> <F10> :call asyncrun#quickfix_toggle(6)<cr>
" Async make
nnoremap <silent> <F12> :AsyncRun make<cr>

